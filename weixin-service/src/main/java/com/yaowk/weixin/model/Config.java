package com.yaowk.weixin.model;

import com.jfinal.plugin.activerecord.SqlPara;
import com.jfinal.json.Json;
import com.yaowk.common.plugin.FindKv;
import com.yaowk.common.constant.CacheConstant;
import com.yaowk.common.kit.DbCacheKit;
import com.yaowk.common.model.base.Page;
import java.util.List;
import java.util.Map;
import com.yaowk.weixin.model.base.BaseConfig;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Config extends BaseConfig<Config> {
	public static final Config dao = new Config().dao();
	protected static final String tableName = "wx_config";

	public List<Config> find(Map condition) {
		FindKv kv = FindKv.create().setCondition(condition).setTable(tableName);
		SqlPara sqlPara = getSqlPara("find", kv);
		String key = "Config:find:" + Json.getJson().toJson(kv);
		DbCacheKit.addKey(key);
		return findByCache(CacheConstant.DB, key, sqlPara.getSql(), sqlPara.getPara());
	}

	public Config findFirst(Map condition) {
		List<Config> result = find(condition);
		return result.size() > 0 ? result.get(0) : null;
	}

	public com.jfinal.plugin.activerecord.Page<Config> paginate(Page page, Map condition) {
		FindKv kv = FindKv.create().setCondition(condition).setTable(tableName);
		SqlPara sqlPara = getSqlPara("paginate-except", kv);
		Json json = Json.getJson();
		String key = "Config:paginate:" + json.toJson(page) + json.toJson(kv);
		DbCacheKit.addKey(key);
		return paginateByCache(CacheConstant.DB, key, page.getPageNumber(), page.getPageSize(), getSql("paginate-select"), sqlPara.getSql(), sqlPara.getPara());
	}

	@Override
	public boolean save() {
		DbCacheKit.removeCacheStarWith("Config:paginate");
		return super.save();
	}

	@Override
	public boolean update() {
		DbCacheKit.removeCacheStarWith("Config");
		return super.update();
	}

	@Override
	public boolean delete() {
		DbCacheKit.removeCacheStarWith("Config");
		return super.delete();
	}

}
